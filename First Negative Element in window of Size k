vector<long long> printFirstNegativeInteger(long long int A[],
                                             long long int N, long long int K) {
                                                 
        deque<long long int>dq;
        vector<long long>ans;
        
        // processing first window
         for(int i=0;i<K;i++){
             if(A[i]<0){
                 dq.push_back(i);
             }
         }
         // check for valid element in queue
         if(dq.size()>0){
             ans.push_back(A[dq.front()]);
         }
         else{
             ans.push_back(0);
         }
         
         // processing remaining windows
         for(int i=K;i<N;i++){
             //remove the stored element from queue
             if(!dq.empty()&&i-dq.front()>=K){
                 dq.pop_front();
             }
             //adding next element
             if(A[i]<0){
                 dq.push_back(i);
             }
             // check for valid element in queue
          if(dq.size()>0){
             ans.push_back(A[dq.front()]);
         }
         else{
             ans.push_back(0);
         }
         }
          
         return ans;
                                                 
 }
