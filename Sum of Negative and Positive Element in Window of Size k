long long sumOfMaxAndMin(vector<int> &nums, int n, int k) {
    
    deque<long long int >maxi;
    deque<long long int>mini;
    //process first window
    for(int i=0;i<k;i++){
        while(!maxi.empty()&&nums[maxi.back()]<=nums[i]){
            maxi.pop_back();
        }
        while(!mini.empty()&&nums[mini.back()]>=nums[i]){
            mini.pop_back();
        }
        maxi.push_back(i);
        mini.push_back(i);
    }
    //ans for first window
    long long int ans=0;
    ans+=nums[maxi.front()]+nums[mini.front()];
    
    //processing next window
    for(int i=k;i<n;i++){
        //removal of element
        while(!maxi.empty()&&i-maxi.front()>=k){
            maxi.pop_front();
        }
        while(!mini.empty()&&i-mini.front()>=k){
            mini.pop_front();
        }
        //addition
         while(!maxi.empty()&&nums[maxi.back()]<=nums[i]){
            maxi.pop_back();
        }
        while(!mini.empty()&&nums[mini.back()]>=nums[i]){
            mini.pop_back();
        }
        maxi.push_back(i);
        mini.push_back(i);
        ans+=nums[maxi.front()]+nums[mini.front()];
        
    }
    return ans;
}
